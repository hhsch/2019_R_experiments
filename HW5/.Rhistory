orange.mean <- rate.mean[3]
diff <- orange.mean - blue.mean
diff.se <- sqrt( model.mse / (1/5 + 1/5) )
diff.allow <- diff.se * model.cc.90
ci <- c(diff - diff.allow, diff + diff.allow)
rownames(ci) <- c("blue - orange")
colnames(ci) <- c("5%, 95%")
print(ci)
is.factor
is.factor(question$Color)
is.factor(color)
cc <- qf(.99, df1=2, df2=21)
cc
1 - pf(cc, df1=2, df2=21, ncp=43.745)
pf(cc, df1=2, df2=21, ncp=43.745)
?pf
ncp
require(graphics)
dchisq(1, df = 1:3)
pchisq(1, df =  3)
pchisq(1, df =  3, ncp = 0:4)  # includes the above
?qtukey
?qstandard
?qstudent
?pstudent
?qscheffe
??scheffe
??qstudent
??qstandard
?scheffe.test
pstandard
?pstandard
?qtukey
qtukey(.9, 2, df=54)
qtukey(.9, 5, df=54)
qtukey(.9, 15, df=54)
5*qf(.9, df1=5, df2=54)
sqrt(5*qf(.9, df1=5, df2=54))
qt(1 - (.05 / 2), df=54)
qt(1 - (.05 / 5), df=54)
qt(1 - (.05 / 15), df=54)
qt(1 - (.1 / (2*15), df=54)
qt(1 - (.1 / (2*15)), df=54)
setwd("~/Documents/UF/2019-Spring/STA4211/HW5")
---
title: "hw5"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r cars}
hayfever <- read.table("CH19PR14.txt")
```
knitr::opts_chunk$set(echo = TRUE)
hayfever <- read.table("CH19PR14.txt")
hayfever
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
trtB
?aov
?map
??map
?aggregate
?mapply
?apply
?mapply
aov(relief ~ trtA + trtB)
?apply
?lapply
?aggregate
aggregate(relief, by=trtA, FUN=mean)
aggregate(relief, by=list(trtA), FUN=mean)
aggregate(relief, by=list(trtA, trtB), FUN=mean)
aggregate(relief, by=list(trtA, trtB), FUN=mean)$x
as.matrix( aggregate(relief, by=list(trtA, trtB), FUN=mean)$x )
as.matrix(3,3 aggregate(relief, by=list(trtA, trtB), FUN=mean)$x )
as.matrix(3,3, aggregate(relief, by=list(trtA, trtB), FUN=mean)$x )
as.matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x 3,3 )
?as.matrix
as.matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x nrow=3, ncol=3 )
as.matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x, nrow=3, ncol=3 )
as.matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x, nrow=3 )
matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x, nrow=3 )
matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x, nrow=3, ncol=3 )
hayfever
matrix(aggregate(relief, by=list(trtA, trtB), FUN=mean)$x, nrow=3, ncol=3 )
hayfever
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
## muij[trtA level][trtB level]
muij <- matrix( aggregate(relief, by=list(trtA), FUN=mean)$x, nrow=3)
mu.. <- mean(muij)
mu..
?tapply
tapply(relief, list(trtA, trtB), FUN=mean)
muij
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
## muij[trtA level][trtB level]
muij <- tapply(relief, list(trtA, trtB))
mu.. <- mean(muij)
muij
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
## muij[trtA level][trtB level]
muij <- tapply(relief, list(trtA, trtB), FUN=mean)
mu.. <- mean(muij)
muij
mu..
?apply
?tapply
?gapply
?mapply
?apply
apply(muij, FUN=mean)
apply(muij, 1, FUN=mean)
apply(muij, 2, FUN=mean)
?sapply
muuij
muij
apply(muij, 1, FUN=mean)
apply(muij, 2, FUN=mean)
?assert
??assert
assertthat::are_equal(mui., muij)
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
mu.j <- apply(muij, MARGIN=2, FUN=mean)
assertthat::are_equal(mui., muij)
assertthat::are_equal(mui., mui.)
test <- aov(relief ~ trtA + trtB)
test
test <- aov(relief ~ trtA + trtB, data = hayfever)
test
anova(test)
test <- aov(relief ~ trtA + trtB)
anova(test)
interaction.plot(test)
interaction.plot(anova(test)
interaction.plot(anova(test))
interaction.plot(anova(test))
interaction.plot(trtA, trtB, response=relief)
anova(test)
test
anova(test)
test <- aov(relief ~ trtA * trtB)
test
anova(test)
test
summary(test)
model <- aov(relief ~ trtA * trtB)
anova(test)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
knitr::opts_chunk$set(echo = FALSE)
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
model <- aov(relief ~ trtA * trtB)
anova(test)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
knitr::opts_chunk$set(echo = TRUE)
model <- aov(relief ~ trtA * trtB)
anova(test)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
model <- aov(relief ~ trtA * trtB)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
residuals(model)
plot(relief, residuals(model))
qqplot(residuals(model))
qqnorm(residuals(model))
?plot.design
plot.design(relief ~ trtA * trtB)
?scheffe
??scheffe
qstandard
?qstandard
??qstandard
??qstudent
?qstudent
length(relief)
n <- 36
r <- 9
alpha <- .10
cc.scheffe <- sqrt( (r - 1) * qf((1 - alpha), (r - 1), (n - r)) )
cc.scheffe
?qqnorm
?qqline
qqnorm( residuals(model) )
qqnorm( residuals(model) )
qqline()
qqline( residuals(model) )
shapiro.test( residuals(model) )
?plot
persp(trtA, trtB, relief)
trtA
persp(c(1,2,3), c(1,2,3), muij)
?persp
persp() muij)
persp(muij)
persp( levels(trtA), levels(trtB), muij )
levels(trtA)
persp( trtA, trtB, muij )
as.numeric(levels(trtA))
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij )
?persp
?plot
?image
?contour
?persp
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, ltheta=45)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, ltheta=)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, ltheta=90)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, ltheta=3)
?persp
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=30)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-20)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30)
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=10, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=-10, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=10, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=0, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=40, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=35, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=20, xlab="trtA", ylab="trtB")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=20, xlab="trtA", ylab="trtB" )
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=20, xlab="trtA", ylab="trtB" )
getwd()
hayfever
knitr::opts_chunk$set(echo = TRUE)
hayfever <- read.table("CH19PR14.txt")
hayfever
plot(relief, studres(model), xlab="Response", ylab="Residuals",
main="Residuals")
rstudent
?rstudent
---
title: "HW5"
subtitle: "Hunter Schwartz"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
#1.
```{r cars}
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
```
#2.
```{r}
model <- aov(relief ~ trtA * trtB)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
```
#3.
```{r}
plot(relief, residuals(model), xlab="Response", ylab="Residuals",
main="Residuals")
```
This plot is intended to check whether the variance of the error terms is constant across all values of the response variable. The residuals appear to have consistent variance here, although they do seem skewed slightly towards the negative direction.
#4.
```{r}
qqnorm( residuals(model) )
qqline( residuals(model) )
shapiro.test( residuals(model) )
```
The residuals seem slightly off here, as before, however the Shapiro test for normality concludes that we may treat the residuals as if they are distributed normally (_p > .3_).
#5.
```{r}
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-30,
phi=20, xlab="trtA", ylab="trtB" )
```
#6.
```{r}
interaction.plot(trtA, trtB, response=relief)
```
#7.
```{r}
anova(model)
```
#8.
```{r}
```
#9.
```{r}
n <- 36
r <- 9
alpha <- .10
cc.scheffe <- sqrt( (r - 1) * qf((1 - alpha), (r - 1), (n - r)) )
```
hayfever
rstudent(model = )
rstudent(model)
?rstudent
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-25,
phi=15, xlab="trtA", ylab="trtB" )
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-25,
phi=18, xlab="trtA", ylab="trtB" )
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="trtA", ylab="trtB" )
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Treatment A", ylab="Treatment B", zlab="Average Response" )
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response" )
muij
?interaction.plot
?confint
summary(model)
info(model)
model
model$effects
model$xlevels
anova(model)
b <- anova(model)
b$`Sum Sq`
b$`Mean Sq`
b$`Mean Sq`[end]
b$`Mean Sq`[:]
b$`Mean Sq`[-1]
b$`Mean Sq`[4]
?confints
?matrix
---
title: "HW5"
subtitle: "Hunter Schwartz"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
#1.
```{r cars}
hayfever <- read.table("CH19PR14.txt")
relief <- hayfever$V1
trtA <- as.factor( hayfever$V2 )
trtB <- as.factor( hayfever$V3 )
```
#2.
```{r}
model <- aov(relief ~ trtA * trtB)
# -- Note: the following are statistics named after the parameter they estimate
muij <- tapply(relief, list(trtA, trtB), FUN=mean)  # muij[trtA level][trtB level]
mui. <- apply(muij, MARGIN=1, FUN=mean)
mu.j <- apply(muij, MARGIN=2, FUN=mean)
mu.. <- mean(muij)
alphai <- mui. - mu..
betaj <- mu.j - mu..
```
#3.
```{r}
plot(relief, rstudent(model), xlab="Response", ylab="Studentized Residuals",
main="Error vs. Response Value")
```
This plot is intended to check whether the variance of the error terms is constant across all values of the response variable. The residuals appear to have consistent variance here, although they do seem skewed slightly towards the negative direction.
#4.
```{r}
qqnorm( rstudent(model) )
qqline( rstudent(model) )
shapiro.test( residuals(model) )
```
The residuals seem slightly off here, as before, however the Shapiro test for normality concludes that we may treat the residuals as if they are distributed normally (_p > .3_).
#5.
```{r}
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response",
main="Treament Combination vs. Average Effect")
```
There appears to be a very clear increase of the response value associated with increasing the level of treatment A and for treatment B.
#6.
```{r}
interaction.plot(trtA, trtB, response=relief, xlab="Treatment A", ylab="Avg. Response",
trace.label="Trt. B", main="Interaction of Treatments A and B")
```
This plot suggests the presence of interaction effects, since the lines are clearly not parallel to one another, meaning the effect of treatment B depends on the level of treatment A.
#7.
```{r}
anova(model)
```
#8.
The results from the ANOVA table above give the results for the $F$-test for interaction, and since the $p$-value is so low, at any reasonable level $\alpha$ we reject the null hypothesis and conclude the interaction plays a significant role in our results.
#9.
```{r}
n <- 36
r <- 9
alpha <- .10
cc.scheffe <- sqrt( (r - 1) * qf((1 - alpha), (r - 1), (n - r)) )
confints <- matrix(nrow=6, ncol=2)
confints.rownames <- c("L1", "L2", "L3", "L4", "L5", "L6")
confints.colnames <- c("Lower", "Upper")
mse <- anova(model)$`Mean Sq`[4]
L1.hat <- (muij[1][2] + muij[1][3]) / 2 - muij[1][1]
L1.se <- mse * (1/4 + 1/4 + 1)
L2.hat <- (muij[2][2] + muij[2][3]) / 2 - muij[2][1]
L2.se <- mse * (1/4 + 1/4 + 1)
L3.hat <- (muij[3][2] + muij[3][3]) / 2 - muij[3][1]
L3.se <- mse * (1/4 + 1/4 + 1)
L4.hat <- L2.hat - L1.hat
L4.se <- L2.se + L1.se
L5.hat <- L3.hat - L1.hat
L5.se <- L3.se + L1.se
L6.hat <- L3.hat - L2.hat
L6.se <- L3.se + L2.se
confints[1][1] <- L1.hat - L1.se * cc.scheffe
confints[1][2] <- L1.hat + L1.se * cc.scheffe
confints[2][1] <- L2.hat - L2.se * cc.scheffe
confints[2][2] <- L2.hat + L2.se * cc.scheffe
confints[3][1] <- L3.hat - L3.se * cc.scheffe
confints[3][2] <- L3.hat + L3.se * cc.scheffe
confints[4][1] <- L4.hat - L4.se * cc.scheffe
confints[4][2] <- L4.hat + L4.se * cc.scheffe
confints[5][1] <- L5.hat - L5.se * cc.scheffe
confints[5][2] <- L5.hat + L5.se * cc.scheffe
confints[6][1] <- L6.hat - L6.se * cc.scheffe
confints[6][2] <- L6.hat + L6.se * cc.scheffe
print(confints)
```
L1.hat
muij[1][2]
muij
muij["1"]["2"]
muij
muij <- as.matrix(muij)
muij
muij[1][2]
is.matrix(muij)
muij[1]
muij[2]
muij[3]
muij[4]
muij[1,3]
L1.se
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response",
main="Treament Combination vs. Average Effect", col="green")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response",
main="Treament Combination vs. Average Effect", col="lightgreen")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response",
main="Treament Combination vs. Average Effect", col="lightblue")
persp( as.numeric(levels(trtA)), as.numeric(levels(trtB)), muij, theta=-23,
phi=18, xlab="Trt. A", ylab="Trt. B", zlab="Avg. Response",
main="Treament Combination vs. Average Effect", col="mint")
