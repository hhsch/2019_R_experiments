ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds)
means <- aggregate(rate, by=list(color), mean)$x
sds <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds)
means
means
sds
?arrows
means <- aggregate(rate, by=list(color), mean)$x
sds <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds, angle=90)
means <- aggregate(rate, by=list(color), mean)$x
sds <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds, angle=90, code=3)
means <- aggregate(rate, by=list(color), mean)$x
sds <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds, angle=90, code=3, length=.1)
means <- aggregate(rate, by=list(color), mean)$x
sds <- aggregate(rate, by=list(color), sd)$x / 2
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, means - sds, 1:3, means + sds, angle=90, code=3, length=.1)
View(model)
View(anova(model))
nrow(question)
model.mse <- sum(model$residuals) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 4)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, rate.mean - rate.allow, 1:3, rate.mean + rate.allow, angle=90, code=3, length=.1)
model.mse <- sum(model$residuals) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, rate.mean - rate.allow, 1:3, rate.mean + rate.allow, angle=90, code=3, length=.1)
model.mse
model.mse
model.se
model.cc
rate.allow
model.mse
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.mse
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, rate.mean - rate.allow, 1:3, rate.mean + rate.allow, angle=90, code=3, length=.1)
rm(list=ls())
# Aspirin/H.A., p. 4
np <- 11037; na <- 11034
phat.p <- 189/11037; phat.p
phat.a <- 104/11034; phat.a
diff <- phat.p - phat.a; diff
var.diff <- (phat.p*(1-phat.p)/np) + (phat.a*(1-phat.a)/na); var.diff
se.diff <- sqrt(var.diff); se.diff
cc <- qnorm(.995); cc
moe <- cc*se.diff; moe
ll <- diff - moe; uu <- diff + moe; c(ll,uu)
#
#
# Kenton Food Company, p. 49 and 50
# P-value of F test; quantile for rejection region
#  using our in-class by-hand calculations
1-pf(18.591,df1=3,df2=15)
qf(.95,df1=3,df2=15) #3.2874
#
kenton <- read.table("Datasets/CH16TA01.txt",col.names=c("Y","package","id"))
kenton$package <- as.factor(kenton$package)
kenton$id <- as.factor(kenton$id)
plot.design(Y ~ package, data=kenton)
plot(Y ~ package, data=kenton) # Comparative boxplots
# Note that dotplots are preferred in this case,
# because the ni are small.
#
# Dotplots; summary stats
stripchart(kenton$Y ~ kenton$package,pch=1)
cellmeans <- aggregate(kenton$Y, by=list(package=kenton$package), FUN=mean)
cellsds <- aggregate(kenton$Y, by=list(package=kenton$package), FUN=sd)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
rate.sd <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, rate.mean - rate.sd, 1:3, rate.mean + rate.sd, angle=90, code=3, length=.1)
question <- read.table("CH16PR08.txt", header=F)
colnames(question) <- c("Rate", "Color", "ID")
rate <- question$Rate
color <- factor(question$Color, labels=c("blue", "green", "orange"))
id <- factor(question$ID)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
rate.sd <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(means, pch=4)
arrows(1:3, rate.mean - rate.sd, 1:3, rate.mean + rate.sd, angle=90, code=3, length=.1)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
rate.mean <- aggregate(rate, by=list(color), mean)$x
rate.sd <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Dot Plot of Response Rate vs. Flier Color",
ylab="Rate", xlab="Color")
points(rate.mean, pch=4)
arrows(1:3, rate.mean - rate.sd, 1:3, rate.mean + rate.sd, angle=90, code=3, length=.1)
```
rate.mean <- aggregate(rate, by=list(color), mean)$x
rate.sd <- aggregate(rate, by=list(color), sd)$x
stripchart(rate ~ color, vertical=T, pch=1, main="Response Rate vs. Flier Color (with standard deviation)",
ylab="Rate", xlab="Color")
points(rate.mean, pch=4)
arrows(1:3, rate.mean - rate.sd, 1:3, rate.mean + rate.sd, angle=90, code=3, length=.1)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
stripchart(rate ~ color, vertical=T, pch=1, main="Response Rate vs. Flier Color (with 90% C.I.'s)",
ylab="Rate", xlab="Color")
points(rate.mean, pch=4)
arrows(1:3, rate.mean - rate.sd, 1:3, rate.mean + rate.sd, angle=90, code=3, length=.1)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
stripchart(rate ~ color, vertical=T, pch=1, main="Response Rate vs. Flier Color (with 90% C.I.'s)",
ylab="Rate", xlab="Color")
points(rate.mean, pch=4)
arrows(1:3, rate.mean - rate.allow, 1:3, rate.mean + rate.allow, angle=90, code=3, length=.1)
model <- aov(rate ~ color)
anova(model)
model.mse <- sum(model$residuals ^ 2) / model$df.residual
model.se <- rep(sqrt(model.mse/15), 3)
model.cc <- qt(.95, df=12) # 90% C.I.
rate.allow <- model.se * model.cc
stripchart(rate ~ color, vertical=T, pch=1, main="Response Rate vs. Flier Color (with 90% C.I.'s)",
ylab="Rate", xlab="Color")
points(rate.mean, pch=4)
arrows(1:3, rate.mean - rate.allow, 1:3, rate.mean + rate.allow, angle=90, code=3, length=.1)
alpha <- .10
qf(1 - alpha, df1=2, df2=12)
confint(model)
model$coefficients
confint(model$coefficients)
?confint
confint(model, parm=c(1), level=.90)
confint(model, parm=c(colororange), level=.90)
confint(model, parm=c("colororange"), level=.90)
rate
orange
color
blue.mean <- rate.mean[1]
orange.mean <- rate.mean[3]
diff <- orange.mean - blue.mean
diff.se <- sqrt( model.mse / (1/5 + 1/5) )
diff.allow <- diff.se * model.cc.90
ci <- c(diff - diff.allow, diff + diff.allow)
rownames(ci) <- c("blue - orange")
colnames(ci) <- c("5%, 95%")
print(ci)
model.cc.90 <- qt(.95, df=12) # 90% C.I.
blue.mean <- rate.mean[1]
orange.mean <- rate.mean[3]
diff <- orange.mean - blue.mean
diff.se <- sqrt( model.mse / (1/5 + 1/5) )
diff.allow <- diff.se * model.cc.90
ci <- c(diff - diff.allow, diff + diff.allow)
rownames(ci) <- c("blue - orange")
colnames(ci) <- c("5%, 95%")
print(ci)
is.factor
is.factor(question$Color)
is.factor(color)
cc <- qf(.99, df1=2, df2=21)
cc
1 - pf(cc, df1=2, df2=21, ncp=43.745)
pf(cc, df1=2, df2=21, ncp=43.745)
?pf
ncp
require(graphics)
dchisq(1, df = 1:3)
pchisq(1, df =  3)
pchisq(1, df =  3, ncp = 0:4)  # includes the above
?qtukey
?qstandard
?qstudent
?pstudent
?qscheffe
??scheffe
??qstudent
??qstandard
?scheffe.test
pstandard
?pstandard
?qtukey
qtukey(.9, 2, df=54)
qtukey(.9, 5, df=54)
qtukey(.9, 15, df=54)
5*qf(.9, df1=5, df2=54)
sqrt(5*qf(.9, df1=5, df2=54))
qt(1 - (.05 / 2), df=54)
qt(1 - (.05 / 5), df=54)
qt(1 - (.05 / 15), df=54)
qt(1 - (.1 / (2*15), df=54)
qt(1 - (.1 / (2*15)), df=54)
?knitr::include_graphics
"hel" + "y"
?knitr::include_graphics
?knitr::opts_chunk
str(knitr::opts_chunk$get())
paste(getwd(), "/1a.png", sep="")
knitr::opts_chunk$set(echo = TRUE)
paste(getwd(), "/1a.png", sep="")
---
title: "Project"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
library(readr);
fl_initiatives <- read_csv("fl-initiatives.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"),
Year = col_integer()));
# Only need year/status
tmp <- data.frame(fl_initiatives$Year, fl_initiatives$Status);
colnames(tmp) <- c('Year', 'Status');
# Scrub other than pass/fail data
tmp <- tmp[tmp$Status != 'Closed',];
tmp <- tmp[tmp$Status != 'Removed',];
tmp <- tmp[tmp$Status != 'Withdrawn',];
tmp <- tmp[tmp$Status != 'Active',];
# Group data, whether need majority or supermajority
tmp['Group'] <- as.numeric(tmp$Year > 2006);
# Create count of pass/defeat by year
nx <- length(levels(factor(tmp$Year)));
ny <- 2; # pass/defeat
A <- rep(0, nx*ny);
dim(A) <- c(nx, ny);
rownames(A) <- levels(factor(tmp$Year));
colnames(A) <- c('Passed', 'Defeated');
for (i in 1:nrow(tmp)) {
b <- A[as.character(tmp$Year[i]), as.character(tmp$Status[i])];
A[as.character(tmp$Year[i]), as.character(tmp$Status[i])] <- b + 1;
}
# Create matrix of proportion data by year
y <- as.numeric(rownames(A)); # years
p <- A[,'Passed'];
d <- A[,'Defeated'];
t <- p + d;
r <- p / t;
fl <- data.frame(y, t, p, r);
rownames(fl) <- NULL;
colnames(fl) <- c('Year', 'Total', 'Passed', 'Proportion Passed');
fl['Group'] <- as.numeric(fl$Year > 2006);
# Plot of number of amendments proposed
plot(y, t, type="h", main="Number of amendments proposed in a given year",
xlab="Year", ylab="Number of amendments")
# Plot of pass rate by year, with expected rates
plot(y, r, main="Proportion of amendments passed by year (including expected rates)", xlab="Year",
ylab="Proportion");
segments(1978, .5, 2006);
segments(2006, .4, 2018);
```
```{r}
# Test for first group
group0 <- fl[fl$Group==0,];
x.0 <- sum(group0$Passed);
n.0 <- sum(group0$Total);
p.0 <- .5 # Chance to pass with random votes
z.0 <- (x.0 - n.0*p.0) / sqrt( n.0*p.0*(1 - p.0) );
z.0
pval.0 <- 2 * (1 - pnorm(z.0));
pval.0
```
```{r}
# Test for second group
group1 <- fl[fl$Group==1,];
x.1 <- sum(group1$Passed);
n.1 <- sum(group1$Total);
p.1 <- .4 # Chance to pass with random votes
z.1 <- (x.1 - n.1*p.1) / sqrt( n.1*p.1*(1 - p.1) );
z.1
pval.1 <- 2 * (1 - pnorm(z.1));
pval.1
```
```{r}
# Test for uniquness of the year 2018
mu <- x.1 / n.1;
mu
s <- sqrt( p.1*(1 - p.1)/n.1 );
s
p <- fl$`Proportion Passed`[fl$Year == 2018];
z.2 <- (p - mu) / s;
z.2
pval.2 <- 2 * (1 - pnorm(z.2));
pval.2
```
---
title: "Project"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
library(readr);
fl_initiatives <- read_csv("fl-initiatives.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"),
Year = col_integer()));
# Only need year/status
tmp <- data.frame(fl_initiatives$Year, fl_initiatives$Status);
colnames(tmp) <- c('Year', 'Status');
# Scrub other than pass/fail data
tmp <- tmp[tmp$Status != 'Closed',];
tmp <- tmp[tmp$Status != 'Removed',];
tmp <- tmp[tmp$Status != 'Withdrawn',];
tmp <- tmp[tmp$Status != 'Active',];
# Group data, whether need majority or supermajority
tmp['Group'] <- as.numeric(tmp$Year > 2006);
# Create count of pass/defeat by year
nx <- length(levels(factor(tmp$Year)));
ny <- 2; # pass/defeat
A <- rep(0, nx*ny);
dim(A) <- c(nx, ny);
rownames(A) <- levels(factor(tmp$Year));
colnames(A) <- c('Passed', 'Defeated');
for (i in 1:nrow(tmp)) {
b <- A[as.character(tmp$Year[i]), as.character(tmp$Status[i])];
A[as.character(tmp$Year[i]), as.character(tmp$Status[i])] <- b + 1;
}
# Create matrix of proportion data by year
y <- as.numeric(rownames(A)); # years
p <- A[,'Passed'];
d <- A[,'Defeated'];
t <- p + d;
r <- p / t;
fl <- data.frame(y, t, p, r);
rownames(fl) <- NULL;
colnames(fl) <- c('Year', 'Total', 'Passed', 'Proportion Passed');
fl['Group'] <- as.numeric(fl$Year > 2006);
# Plot of number of amendments proposed
plot(y, t, type="h", main="Number of amendments proposed in a given year",
xlab="Year", ylab="Number of amendments")
# Plot of pass rate by year, with expected rates
plot(y, r, main="Proportion of amendments passed by year (including expected rates)", xlab="Year",
ylab="Proportion");
segments(1978, .5, 2006);
segments(2006, .4, 2018);
```
```{r}
# Test for first group
group0 <- fl[fl$Group==0,];
x.0 <- sum(group0$Passed);
n.0 <- sum(group0$Total);
p.0 <- .5 # Chance to pass with random votes
z.0 <- (x.0 - n.0*p.0) / sqrt( n.0*p.0*(1 - p.0) );
z.0
pval.0 <- 2 * (1 - pnorm(z.0));
pval.0
```
```{r}
# Test for second group
group1 <- fl[fl$Group==1,];
x.1 <- sum(group1$Passed);
n.1 <- sum(group1$Total);
p.1 <- .4 # Chance to pass with random votes
z.1 <- (x.1 - n.1*p.1) / sqrt( n.1*p.1*(1 - p.1) );
z.1
pval.1 <- 2 * (1 - pnorm(z.1));
pval.1
```
```{r}
# Test for uniquness of the year 2018
mu <- x.1 / n.1;
mu
s <- sqrt( p.1*(1 - p.1)/n.1 );
s
p <- fl$`Proportion Passed`[fl$Year == 2018];
z.2 <- (p - mu) / s;
z.2
pval.2 <- 2 * (1 - pnorm(z.2));
pval.2
```
setwd("~/Documents/UF/2019-Spring/STA4211/Project")
---
title: "Project"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
library(readr);
fl_initiatives <- read_csv("fl-initiatives.csv",
col_types = cols(Date = col_date(format = "%m/%d/%Y"),
Year = col_integer()));
# Only need year/status
tmp <- data.frame(fl_initiatives$Year, fl_initiatives$Status);
colnames(tmp) <- c('Year', 'Status');
# Scrub other than pass/fail data
tmp <- tmp[tmp$Status != 'Closed',];
tmp <- tmp[tmp$Status != 'Removed',];
tmp <- tmp[tmp$Status != 'Withdrawn',];
tmp <- tmp[tmp$Status != 'Active',];
# Group data, whether need majority or supermajority
tmp['Group'] <- as.numeric(tmp$Year > 2006);
# Create count of pass/defeat by year
nx <- length(levels(factor(tmp$Year)));
ny <- 2; # pass/defeat
A <- rep(0, nx*ny);
dim(A) <- c(nx, ny);
rownames(A) <- levels(factor(tmp$Year));
colnames(A) <- c('Passed', 'Defeated');
for (i in 1:nrow(tmp)) {
b <- A[as.character(tmp$Year[i]), as.character(tmp$Status[i])];
A[as.character(tmp$Year[i]), as.character(tmp$Status[i])] <- b + 1;
}
# Create matrix of proportion data by year
y <- as.numeric(rownames(A)); # years
p <- A[,'Passed'];
d <- A[,'Defeated'];
t <- p + d;
r <- p / t;
fl <- data.frame(y, t, p, r);
rownames(fl) <- NULL;
colnames(fl) <- c('Year', 'Total', 'Passed', 'Proportion Passed');
fl['Group'] <- as.numeric(fl$Year > 2006);
# Plot of number of amendments proposed
plot(y, t, type="h", main="Number of amendments proposed in a given year",
xlab="Year", ylab="Number of amendments")
# Plot of pass rate by year, with expected rates
plot(y, r, main="Proportion of amendments passed by year (including expected rates)", xlab="Year",
ylab="Proportion");
segments(1978, .5, 2006);
segments(2006, .4, 2018);
```
```{r}
# Test for first group
group0 <- fl[fl$Group==0,];
x.0 <- sum(group0$Passed);
n.0 <- sum(group0$Total);
p.0 <- .5 # Chance to pass with random votes
z.0 <- (x.0 - n.0*p.0) / sqrt( n.0*p.0*(1 - p.0) );
z.0
pval.0 <- 2 * (1 - pnorm(z.0));
pval.0
```
```{r}
# Test for second group
group1 <- fl[fl$Group==1,];
x.1 <- sum(group1$Passed);
n.1 <- sum(group1$Total);
p.1 <- .4 # Chance to pass with random votes
z.1 <- (x.1 - n.1*p.1) / sqrt( n.1*p.1*(1 - p.1) );
z.1
pval.1 <- 2 * (1 - pnorm(z.1));
pval.1
```
```{r}
# Test for uniquness of the year 2018
mu <- x.1 / n.1;
mu
s <- sqrt( p.1*(1 - p.1)/n.1 );
s
p <- fl$`Proportion Passed`[fl$Year == 2018];
z.2 <- (p - mu) / s;
z.2
pval.2 <- 2 * (1 - pnorm(z.2));
pval.2
```
fl
sum(fl$Total)
sum(fl$Passed)
fl_initiatives
colnames(fl_initiatives)
